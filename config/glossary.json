{
    "ebeam": {
        "required": true,
        "description": "Beam energy in GeV for the .hipo dataset to be processed",
        "type": "double",
        "units": "GeV"
    },
    "torus": {
        "required": true,
        "description": "Torus magnet polarity (+1 = negative outbending or -1 = negative inbending)",
        "type": "int",
        "options": [1, -1]
    },
    "channel": {
        "required": true,
        "description": "Physics channel to analyze",
        "type": "string",
        "options": {
            "genOnly": "Generated events only",
            "inclusiveRec": "Accept all PID",
            "genMatch": "Accept all PID which satisfy GEN<->REC matching",
            "eppi0": "Exclusive ep->e'p'pi0"
        }
    },
    "fiducialCuts": {
        "required": false,
        "description": "Fiducial cuts applied to each event",
        "type": "list of strings",
        "options": {
            "DCEdges_RGA": "",
            "FT_RGA": "",
            "ECAL_RGA": "",
            "ECAL_RGAS19": "",
            "ECAL_RGK": "",
            "ECALEdges_RGK": "",
            "CVT_RGA": ""
        }
    },
    "isMC": {
        "required": false,
        "default": false,
        "description": "Are events generated and/or simulated? If so, disable QA."
    },
    "branches": {
        "required": false,
        "description": "Supplemental ROOT TTree branches to load for different particle categories.",
        "type": "list of str particle categories : list of branch names",
        "default": "Only essential branches are filled. See 'Vars.h' for supplemental branch options",
        "keys": {
            "event": "Event-level branches",
            "rec": "Reconstructed particle branches",
            "electron": "Electron-specific branches. Same branch options as rec",
            "proton": "Proton-specific branches. Same branch options as rec",
            "photon": "Photon-specific branches. Same branch options as rec"
        },
        "examples showcasing supplemental branches": {
            "event": ["numElectrons", "numProtons", "numPhotons"],
            "rec": ["px", "time", "yFT", "uPCAL", "theta_cvt"],
            "electron": ["xDC1", "E_PCAL", "wECOUT"],
            "proton": ["edge_cvt1", "yDC3", "phi_cvt"],
            "photon": ["xFT", "E_ECIN", "vz"]
        }
    },
    "qa": {
        "required": false,
        "description": "Quality assurance filters applied to each event",
        "type": "list of strings",
        "options": ["MarginalOutlier", "TerminalOutlier", "TotalOutlier", "SectorLoss", "LowLiveTime"]
    },
    "maxEvents": {
        "required": false,
        "default": -1,
        "description": "Optional max # events to process",
        "type": "int"
    },
    "kinCorrections": {
        "required": false,
        "description": "Functional forms and parameters for correcting proton energy loss",
        "keys": {
            "p_delta_p_FD": {
                "form": "Functional form defined in KinematicCorrections, e.g., [0] + [1]/p + [2]/(p^2)",
                "coeffs": {
                    "0": ["p0(theta^0)", "p1(theta^1)", "p2(theta^2)", "etc."],
                    "1": ["theta power series"],
                    "2": ["theta power series"]
                }
            },
            "p_delta_p_CD": {
                
            },
            "p_delta_theta_FD":"",
            "p_delta_theta_CD":"",
            "p_delta_phi_FD":"",
            "p_delta_phi_CD":""
        }
    },
    "SFCuts": {
        "required": false,
        "description": "Incorporate 3-sigma SF cuts and triangle cut for electrons",
        "keys": "Accepts either the str filepath to the output .json of pyMacros/getSFCuts.py, or the .json itself"
    },
    "outPrefix": {
        "required": false,
        "description": "Optional prefix for ROOT output filename",
        "type": "string"
    }
}

  